{"version":3,"sources":["components/AddPost.js","components/EditContact.js","components/Home.js","components/Navbar.js","App.js","redux/reducer/contactReducer.js","index.js"],"names":["connect","state","contacts","dispatch","addContact","data","type","payload","useState","name","setName","email","setEmail","taskName","setTaskName","timeTaken","setTimeTaken","status","setStatus","navigate","useNavigate","className","onSubmit","e","preventDefault","today","Date","setMinutes","getMinutes","parseInt","console","log","checkContactEmailExists","filter","contact","toast","warning","length","error","id","boundTime","success","placeholder","value","onChange","target","for","class","disabled","updateContact","useParams","history","currentContact","find","useEffect","setTimeBoundary","onClick","deleteContact","doneContact","timeChecking","interval","setInterval","clearInterval","to","scope","map","Navbar","App","exact","path","element","initialState","store","createStore","action","contactFilter","findIndex","obj","statusUpdate","date1","statusUpdate1","getTime","contactUpdate","Object","assign","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.54f99a7e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst AddPost = ({ contacts, addContact }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [taskName, setTaskName] = useState(\"\");\n  const [timeTaken, setTimeTaken] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    var today = new Date();\n    today.setMinutes(today.getMinutes() + parseInt(timeTaken, 10));\n    console.log(\"kya andar jayega\", today);\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email ? contact : null\n    );\n    if (!email || !name) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n\n    const data = {\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\n      email,\n      name,\n      taskName,\n      timeTaken,\n      status,\n      boundTime: today\n    };\n\n    addContact(data);\n    toast.success(\"Data added successfully!!\");\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Data</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Full name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Task Name\"\n                value={taskName}\n                onChange={(e) => setTaskName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputState\" class=\"form-label\">\n                Select Time ( only in Mins)\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Time take to complete a task\"\n                value={timeTaken}\n                onChange={(e) => setTimeTaken(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                disabled\n                placeholder=\"Status\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group  m-3\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Add Data\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (data) => {\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst EditContact = ({ contacts, updateContact }) => {\n  const { id } = useParams();\n  const history = useNavigate();\n  const currentContact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentContact.name);\n    setEmail(currentContact.email);\n    setTaskName(currentContact.taskName);\n    setTimeTaken(currentContact.timeTaken);\n    setStatus(currentContact.status);\n    setTimeBoundary(currentContact.boundTime);\n  }, [currentContact]);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [taskName, setTaskName] = useState(\"\");\n  const [timeTaken, setTimeTaken] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [timeBoundary, setTimeBoundary] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    var today = new Date();\n    today.setMinutes(today.getMinutes() + parseInt(timeTaken, 10));\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n\n    if (!email || !name) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n\n    const data = {\n      id: currentContact.id,\n      email,\n      name,\n      taskName,\n      timeTaken,\n      status,\n      boundTime: today\n    };\n\n    updateContact(data);\n    toast.success(\"Data updated successfully!!\");\n    history(\"/\");\n  };\n  console.log(status, \"status\");\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => history(\"/\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {currentContact ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={name}\n                  placeholder={\"Name\"}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={email}\n                  placeholder={\"Email\"}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={taskName}\n                  placeholder={\"Task Name\"}\n                  onChange={(e) => setTaskName(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"inputState\" class=\"form-label\">\n                  Select Time ( only in Mins)\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Time take to complete a task\"\n                  value={timeTaken}\n                  onChange={(e) => setTimeTaken(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"inputState\" class=\"form-label\">\n                  Status\n                </label>\n                <select\n                  id=\"inputState\"\n                  class=\"form-select p-2\"\n                  value={status}\n                  onChange={(e) => setStatus(e.target.value)}\n                >\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"missed\">Missed</option>\n                </select>\n              </div>\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update Contact\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => history(\"/\")}\n                >\n                  cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <h1 className=\"text-center\"> No To-Do Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateContact: (data) => {\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = ({ contacts, deleteContact, doneContact, timeChecking }) => {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      timeChecking();\n    }, 10000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n          Add New Task\n        </Link>\n        <div className=\"col-md-10 mx-auto my-4\">\n          <table className=\"table table-hover\">\n            <thead className=\"table-header bg-dark text-white\">\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Task Name</th>\n                <th scope=\"col\">Time Taken </th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.length > 0 ? (\n                contacts.map((contact, id) => (\n                  <tr key={id}>\n                    <td>{id + 1}</td>\n                    <td>{contact.name}</td>\n                    <td>{contact.email}</td>\n                    <td>{contact.taskName}</td>\n                    <td>{contact.timeTaken}</td>\n                    <td>{contact.status}</td>\n                    <td>\n                      <div className=\"d-flex p-2\">\n                        <Link\n                          to={`/edit/${contact.id}`}\n                          className=\"btn btn-sm btn-primary m-1 d-inline-flex p-2\"\n                        >\n                          Edit\n                        </Link>\n                        <button\n                          type=\"button\"\n                          onClick={() => deleteContact(contact.id)}\n                          className=\"btn btn-sm btn-danger m-1 d-inline-flex p-2\"\n                        >\n                          Delete\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => doneContact(contact.id)}\n                          className=\"btn btn-sm btn-success m-1 d-inline-flex p-2 \"\n                        >\n                          Done\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <th>No Data found</th>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => {\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  },\n  doneContact: (id) => {\n    dispatch({ type: \"UPDATE_STATUS\", payload: id });\n  },\n  timeChecking: (id) => {\n    dispatch({ type: \"UPDATE_STATUS_DATE\", payload: id });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"col-md-12 bg-dark py-2\">\n      <nav className=\"navbar bg-dark navbar-dark  \">\n        <Link to={\"/\"} className=\"navbar-brand \">\n          TO DO LIST APP\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddPost\";\nimport EditContact from \"./components/EditContact\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<Home />}></Route>\n        <Route exact path=\"/add\" element={<AddPost />} />\n        <Route exact path=\"/edit/:id\" element={<EditContact />} />\n      </Routes>\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\n  {\n    id: 0,\n    name: \"Raman Sharma\",\n    email: \"email@email.com\",\n    taskName: \"string\",\n    timeTaken: 0,\n    status: \"pending\",\n    boundTime: \"\"\n  },\n  {\n    id: 1,\n    name: \"Test Name\",\n    email: \"test@test.com\",\n    taskName: \"test data\",\n    timeTaken: 0,\n    status: \"pending\",\n    boundTime: \" \"\n  }\n];\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      state = [...state, action.payload];\n      return state;\n    case \"DELETE_CONTACT\":\n      const contactFilter = state.filter((contact) =>\n        contact.id === action.payload ? null : contact\n      );\n      state = contactFilter;\n      return state;\n    case \"UPDATE_STATUS\":\n      const id = state.findIndex((obj) => obj.id === action.payload);\n      state[id].status = \"done\";\n      const statusUpdate = state.filter((contact) =>\n        contact.status === \"\"\n          ? (contact.status = \"done\") // Object.assign(contact, (action.payload.status = \"done\"))\n          : contact\n      );\n      state = statusUpdate;\n      return state;\n    case \"UPDATE_STATUS_DATE\":\n      var date1 = new Date();\n      const statusUpdate1 = state.filter((contact) =>\n        date1.getTime() > contact.boundTime && contact.status !== \"done\"\n          ? (contact.status = \"missed\")\n          : contact\n      );\n\n      state = statusUpdate1;\n      return state;\n    case \"UPDATE_CONTACT\":\n      const contactUpdate = state.filter((contact) =>\n        contact.id === action.payload.id\n          ? Object.assign(contact, action.payload)\n          : contact\n      );\n      state = contactUpdate;\n      return state;\n    case \"RESET_CONTACT\":\n      state = [\n        {\n          name: null,\n          email: null,\n          taskName: null,\n          timeTaken: null,\n          status: \"pending\",\n          boundTime: null\n        }\n      ];\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { contactReducer } from \"./redux/reducer/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n    ,\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}